{"version":3,"file":"static/js/375.cf3373f9.chunk.js","mappings":"kSAGaA,EAAeC,EAAAA,GAAAA,IAAH,6CAIZC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kbAsBVG,EAAgBH,EAAAA,GAAAA,IAAH,yHASbI,EAASJ,EAAAA,GAAAA,IAAH,iIAQNK,EAAiBL,EAAAA,GAAAA,IAAH,oJAUdM,EAAYN,EAAAA,GAAAA,GAAH,4JASTO,EAASP,EAAAA,GAAAA,GAAH,gIAQNQ,EAAQR,EAAAA,GAAAA,GAAH,+OAULS,EAAOT,EAAAA,GAAAA,GAAH,4E,SCoBjB,EAxFqB,WAAO,IAAD,IACzB,GAAwCU,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAqBJ,GAFzB,OAETK,EAFS,OAGfR,EAAgBQ,GAHD,gDAKfC,QAAQC,IAAI,gCAAZ,MALe,yDAAH,qDAQhBJ,GACD,GAAE,CAACH,KAECJ,EACH,OAAO,yBAAK,eAGd,IACEY,EAOEZ,EAPFY,YACAC,EAMEb,EANFa,eACAC,EAKEd,EALFc,MACAC,EAIEf,EAJFe,aACAC,EAGEhB,EAHFgB,aACAC,EAEEjB,EAFFiB,OACAC,EACElB,EADFkB,SAGF,OACE,UAAC9B,EAAD,YACE,SAACE,EAAD,CAAY6B,GAAE,oBAAEjB,EAASkB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAxC,SAAmD,aACnD,UAAC7B,EAAD,YACE,SAACC,EAAD,CACE6B,IACEV,EAAW,6CAC+BA,GACtC,gHAENW,IAAKT,GAASD,KAEhB,UAACnB,EAAD,YACE,UAACC,EAAD,WACGmB,GAASD,EACTG,IAAgB,4BAAM,KAAGQ,SAASR,GAAc,UAGlDD,IACC,+BACE,yBAAG,cAAYA,OAIlBG,IACC,iCACE,wBAAI,cACJ,uBAAIA,OAIPD,IACC,UAACrB,EAAD,YACE,wBAAI,YACHqB,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACV,SAAC9B,EAAD,UAAoB6B,EAAME,MAAdD,EADF,cAOpB,wBAAI,4BACJ,UAAC7B,EAAD,YACE,yBACE,SAACR,EAAD,CAAY6B,GAAE,OAAd,SAAwB,YAE1B,yBACE,SAAC7B,EAAD,CAAY6B,GAAE,UAAd,SAA2B,kBAI/B,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  margin-top: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-left: 16px;\n  padding: 8px 16px;\n  border: 1px solid;\n  background-color: lightskyblue;\n  border-radius: 4px;\n  text-decoration: none;\n  color: darkblue;\n  font-size: 16px;\n  font-weight: 700;\n\n  &.active {\n    color: #fff;\n    background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #fd5523;\n  }\n`;\n\nexport const DetailWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n  padding: 16px;\n  font-weight: 500;\n`;\n\nexport const Poster = styled.img`\n  width: 30%;\n  height: 100%;\n  border-radius: 8px;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const WrapperDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  padding: 16px;\n  font-weight: 500;\n`;\n\nexport const MainTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  color: darkblue;\n  font-size: 14;\n  font-weight: 500;\n  letter-spacing: 1.5px;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const Genre = styled.li`\n  background: linear-gradient(141.22deg, #ffc226 9.4%, #f84119 91.91%);\n  color: rgb(0, 0, 0);\n  text-shadow: 0 0.4px 0.4px #fff;\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 6px;\n`;\n\nexport const Refs = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMoviesDetailsById } from 'service/movies-service';\nimport {\n  MovieWrapper,\n  StyledLink,\n  Poster,\n  DetailWrapper,\n  WrapperDetails,\n  MainTitle,\n  Genres,\n  Genre,\n  Refs,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        const data = await getMoviesDetailsById(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    title,\n    vote_average,\n    release_date,\n    genres,\n    overview,\n  } = movieDetails;\n\n  return (\n    <MovieWrapper>\n      <StyledLink to={location.state?.from ?? '/movies'}>Go back</StyledLink>\n      <DetailWrapper>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original${poster_path}`\n              : 'https://www.technocrazed.com/wp-content/uploads/2013/06/Discover_how_cinema_posters_similar_back-443x1024.jpg'\n          }\n          alt={title || original_title}\n        />\n        <WrapperDetails>\n          <MainTitle>\n            {title || original_title}\n            {release_date && <span> ({parseInt(release_date)})</span>}\n          </MainTitle>\n\n          {vote_average && (\n            <>\n              <p>User Score:{vote_average}</p>\n            </>\n          )}\n\n          {overview && (\n            <>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n            </>\n          )}\n\n          {genres && (\n            <Genres>\n              <h3>Genres:</h3>\n              {genres.map((genre, index) => (\n                <Genre key={index}>{genre.name}</Genre>\n              ))}\n            </Genres>\n          )}\n        </WrapperDetails>\n      </DetailWrapper>\n      <h3>Additional Information</h3>\n      <Refs>\n        <li>\n          <StyledLink to={`cast`}>Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to={`reviews`}>Reviews</StyledLink>\n        </li>\n      </Refs>\n\n      <Outlet />\n    </MovieWrapper>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieWrapper","styled","StyledLink","Link","DetailWrapper","Poster","WrapperDetails","MainTitle","Genres","Genre","Refs","useState","movieDetails","setMovieDetails","location","useLocation","movieId","useParams","useEffect","getDetails","getMoviesDetailsById","data","console","log","poster_path","original_title","title","vote_average","release_date","genres","overview","to","state","from","src","alt","parseInt","map","genre","index","name"],"sourceRoot":""}