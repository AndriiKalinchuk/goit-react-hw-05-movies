{"version":3,"file":"static/js/905.f9e36c63.chunk.js","mappings":"uQAsBA,EAlBkB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMJ,GAAhD,SACGD,EAAMM,SAFFN,EAAMG,GAMlB,ECYD,EApBkB,SAAC,GAA0B,IAAxBI,EAAuB,EAAvBA,OAAQN,EAAe,EAAfA,SAC3B,OACE,wBACGM,EAAOC,KAAI,SAAAR,GAAK,OACf,SAAC,EAAD,CAA0BA,MAAOA,EAAOC,SAAUA,GAAlCD,EAAMG,GADP,KAKtB,E,SC8BD,EAtCmB,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SACpB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OACE,kBAAMH,SATa,SAAAI,GAEnB,GADAA,EAAEC,kBACGH,EAAOI,OACV,OAAOC,MAAM,cAEfP,EAASE,EACV,EAGC,WACE,kBACEM,KAAK,OACLC,YAAY,kCACZC,KAAK,SACLC,UAAQ,EACRC,WAAS,EACTC,MAAOX,EACPY,SAtBe,SAAAV,GACnB,IAAQS,EAAUT,EAAEW,OAAZF,MACRV,EAAUU,EACX,KAqBG,mBAAQL,KAAK,SAAb,UACE,SAAC,MAAD,CAAUQ,KAAK,aAItB,ECGD,EAjCe,WACb,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOH,EAAP,KAAemB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzB9B,GAAW+B,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMtB,GAAN,iEACnBkB,EAAgB,CAAEC,MAAOnB,IADN,2CAAH,sDAmBlB,OAfAuB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,uFACbL,EADa,2EAKGM,EAAAA,EAAAA,IAAiBN,GALpB,OAKVO,EALU,OAMhBX,EAAUW,EAAKC,SANC,gDAQhBC,QAAQC,IAAI,yBAAZ,MARgB,yDAAH,qDAWjBL,GACD,GAAE,CAACL,KAGF,iCACE,SAAC,EAAD,CAAYrB,SAAUwB,KACtB,SAAC,EAAD,CAAW1B,OAAQA,EAAQN,SAAUA,MAG1C,C","sources":["components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ movie, location }) => {\n  return (\n    <li key={movie.id}>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        {movie.title}\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem/MovieItem';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} location={location} />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FiSearch } from 'react-icons/fi';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setSearch(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!search.trim()) {\n      return alert('Enter text');\n    }\n    onSubmit(search);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"What movie do you want to find?\"\n        name=\"search\"\n        required\n        autoFocus\n        value={search}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">\n        <FiSearch size=\"16px\" />\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'service/movies-service';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSearch = async search => {\n    setSearchParams({ query: search });\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!query) {\n        return;\n      }\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSearch} />\n      <MovieList movies={movies} location={location} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movie","location","to","id","state","from","title","movies","map","onSubmit","useState","search","setSearch","e","preventDefault","trim","alert","type","placeholder","name","required","autoFocus","value","onChange","target","size","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useLocation","handleSearch","useEffect","fetchMovies","getMoviesByQuery","data","results","console","log"],"sourceRoot":""}